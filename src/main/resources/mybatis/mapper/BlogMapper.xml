<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- xml파일에는 SQL구문만 따로 작성하기 때문에 자바 메서드를 선언할 연동 인터페이스를 매칭시켜준다. -->
<mapper namespace="com.spring.blog.repository.BlogRepository">

    <!-- DB의 blog 엔터티를 인텔리제이의 Blog 엔터티로 전달 -->
    <select id="findAll" resultType="com.spring.blog.entity.Blog">
        SELECT
            blog_id as blogId,
            writer,
            blog_title as blogTitle,
            blog_content as blogContent,
            published_at as publisedAt,
            updated_at as updatedAt,
            blog_count as blogCount
        FROM
            blog
    </select>

    <select id="findByid" resultType="com.spring.blog.entity.Blog">
        SELECT
            blog_id as blogId,
            writer,
            blog_title as blogTitle,
            blog_content as blogContent,
            published_at as publisedAt,
            updated_at as updatedAt,
            blog_count as blogCount
        FROM
            blog
        WHERE
            blog_id = #{blogId}
    </select>

    <insert id="save" parameterType="com.spring.blog.entity.Blog">
        INSERT INTO
            blog (writer, blog_title, blog_content)
            VALUES (#{writer}, #{blogTitle}, #{blogContent})
    </insert>

    <delete id="deleteByid" parameterType="long">
        DELETE FROM blog
        WHERE blog_id = #{blogId}
    </delete>

    <update id="update" parameterType="com.spring.blog.entity.Blog">
        UPDATE blog
        SET blog_title = #{blogTitle}, blog_content = #{blogContent}, updated_at = now()
        WHERE blog_id = #{blogId}
    </update>


    <!-- 테스트용 쿼리문 -->
    <update id="createBlogTable">
        CREATE TABLE IF NOT EXISTS blog(
        blog_id int auto_increment primary key,
        writer varchar(16) not null,
        blog_title varchar(200) not null,
        blog_content varchar(4000) not null,
        published_at datetime default now(),
        updated_at datetime default now(),
        blog_count int default 0
        )
    </update>
    <update id="dropBlogTable">
        DROP TABLE blog
    </update>

    <insert id="insertTestData">
        INSERT INTO blog VALUES
        (null, '1번유저', '1번제목', '1번본문', now(), now(), null),
        (null, '2번유저', '2번제목', '2번본문', now(), now(), null),
        (null, '3번유저', '3번제목', '3번본문', now(), now(), null)
    </insert>
</mapper>